Proc::ProcessTable, version .38

STATUS
======
This is BETA software; it seems to work, but use at your own risk :) 

Currently works on windows, linux, solaris, aix, hpux, freebsd, irix, dec_osf,
bsdi, netbsd, unixware 7.x and SunOS. Please see the "README.osname" files
for details on individual os implementations. Please see the file
PORTING if you are interested in making it work on something
else. Please see the file TODO for a list of issues that need to be
addressed (and send me patches!).

Please note that the windows port requires the Cygwin environment to
work (available from http://cygwin.com/), and that the code for the
port is derived from Cygwin code and is therefore covered by the
Cygwin license (http://cygwin.com/licensing.html).

Multithread support is now available for Solaris; please see
README.solaris for info. It may work under other OS's as well; please
let me know if it does.

Comments, bug reports, patches and especially ports are greatly
appreciated. If you want to submit a patch, *please* use standard
context-diff format; if you're submitting a port, a tarball of the new
files is great.

DESCRIPTION
===========
This module is a first crack at providing a consistent interface to
Unix (and maybe other multitasking OS's) process table information.
The impetus for this came about with my frustration at having to parse
the output of various systems' ps commands to check whether specific
processes were running on different boxes at a larged mixed Unix site.
The output format of ps was different on each OS, and sometimes
changed with each new release of an OS. Also, running a ps subprocess
from within a perl or shell script and parsing the output was not a
very efficient or aesthetic way to do things.

With this module, you can do things like this:

	# kill memory pigs 
	use Proc::ProcessTable;

	$t = new Proc::ProcessTable;
        foreach $p ( @{$t->table} ){	
	  if( $p->pctmem > 95 ){
	    $p->kill(9);
          }		
        }

There is another short example in the file "example.pl" in the
distribution. For a more elaborate example (in German), see
<http://www.linux-magazin.de/ausgabe.1999.02/Proc/proc.html>.
<shameless plug> If you can't read German, try my other module,
WWW::Babelfish!</shameless plug> 
	
There are also two contributed modules: a module called Proc::Killall
contributed by Aaron Sherman to kill all processes whose command-lines
match a given pattern, and a module called Proc::Killfam by Stephen
Lidie to kill a list of processes and their children. These modules
are installed along with Proc::ProcessTable. Pod documentation is
included in both of them.


INSTALLATION
============
This module needs the File::Find and Storable modules in order to
work. File::Find is generally included with perl distributions;
Storable is available from CPAN. 

After unpacking the tar file, do:

        perl Makefile.PL 
        make
	make test
        make install

There is embedded POD documentation in ProcessTable.pm and
Process/Process.pm.

ACKNOWLEDGEMENTS
================
Thanks to the many people who have sent in ports and patches. Without
them this module would be impossible to support on so many platforms.

David Paquet <David.Paquet@cnes.fr>		AIX port
Mike Romberg <romberg@fsl.noaa.gov>		HPUX port
Slaven Rezic <eserte@cs.tu-berlin.de>		FreeBSD port
W. Phillip Moore <wpm@ms.com>			IRIX port
Peter ? <hooft@natlab.research.philips.com>	IRIX version patch
Rolf Petter Halle <rph@nextel.no>		solaris nanosecond patch
Bernhard Schmalhofer <Bernhard.Schmalhofer@gmx.de>	dec_osf port
Sean Eskins <sean@gilasoft.com>				bsdi port
Peter Reich <pr@alles.prima.de>				netbsd port
Dave Alden <alden@math.ohio-state.edu>	solaris "nice" and "onproc" patch
Noel Paul <NoelP@mincom.com>		dec_osf and IRIX patches
F. Buirey <f.buirey@saprr.fr> 		AIX patch for SMP
Aaron Sherman <ajs@ajs.com>		Proc::Killall module
Philip Gwyn <fil@pied.nu>		jiffies -> Usec patch for linux
Slaven Rezic <eserte@cs.tu-berlin.de>	Patch for Storable, FreeBSD 
Slaven Rezic <eserte@cs.tu-berlin.de>	Patch to make test script -w clean
Wolfgang Friebel <Wolfgang.Friebel@desy.de> HPUX time patch
Adrian Phillips <tandem@dnmi.no>	AIX cmndline patch
Chris Adams <cmadams@hiwaay.net>	Patch for array return
					support, new fields on Dec OSF.
					Patches for TTYs with device #0 and 
					using table() to get procs on Dec.
Tryggvi Farestveit <tryggvi@firmanet.is> Patch for Linux cmndline
Steve Lidie <sol0@Lehigh.EDU>		Killfam.pm module
David Good <dgood@stratasource.com>	Patch for 32-bit HPUX 11.0 support
Martin Lucina <mato@catalyst.net.nz>	Unixware 7.x port
Shawn Clifford <shawn.a.clifford@lmco.com> SunOS port
Thomas Linden <tom@daemon.de>		Linux enhancements
Nicolas Belan <belan@matranet.com>	Patch to add cmndline for bsdi
Marcus Crafter <crafterm@osa.de>	Documentation typo
Stephen Pillinger <S.M.Pillinger@cs.bham.ac.uk>
					Fix for JIFFIES_TO_MICROSECONDS int 
					overflow.	  
H.Merijn Brand <h.m.brand@hccnet.nl>	Patch for File::Find on AIX.
Anthony Higa <anthony@squareusa.com>	Linux code cleanup patch.
Thomas Glanzmann <sithglan@stud.uni-erlangen.de>
					Patch to fix starttime
					overflow and MP time bugs on linux.
Doug Lewis <dlewis@exchange.webmd.net>	Patch for taint checking.
Jan L Peterson <jlp@flipdog.com>	Patch for taint checking.
Peter van Hooft <hooft@natlab.research.philips.com>
					Patch to allow non-root use on
					IRIX.
Mike Castle <dalgoda@ix.netcom.com>	Documentation typo patch.
James FitzGibbon <james@ehlo.com>	AIX patch.
Joseph Cavanaugh <Joseph.Cavanaugh@FMR.COM>
					Patch to add thread count for
					Solaris.  
Marcus Crafter <crafterm@osa.de>	Patch for linux compiler
					warnings.
J Robert Ray <jrray@jrray.org>		Windows port.
Kong Li <Kong.Li@netiq.com>		Solaris multithread support.
<jon@jjb.demon.co.uk>			Patch for tty mapping.
Philip Molter <philip@texas.net>	Patch for my Solaris typo.
Tim Cutts <tjrc@sanger.ac.uk>		Patch for Tru64 clusters.

Please note that Bernard Schmalhofer is no longer able to provide
support for the dec_osf port.
			
COPYRIGHT
=========
Copyright (c) 1998-2002 Daniel J. Urist. All rights reserved.
This package is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

--
Daniel J. Urist
durist@world.std.com
http://www.world.std.com/~durist
