#============================================================= -*-perl-*-
#
# Template::Modules
#
# DESCRIPTION
#   This section contains the documentation for the modules that
#   comprise the Template Toolkit.
#
# AUTHOR
#   Andy Wardley  <abw@andywardley.com>
#
# COPYRIGHT
#   Copyright (C) 1996-2001 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2001 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
# REVISION
#   
#
#========================================================================


#------------------------------------------------------------------------
# IMPORTANT NOTE
#   This documentation is generated automatically from source
#   templates.  Any changes you make here may be lost.
# 
#   The 'docsrc' documentation source bundle is available for download
#   from http://www.template-toolkit.org/docs.html and contains all
#   the source templates, XML files, scripts, etc., from which the
#   documentation for the Template Toolkit is built.
#------------------------------------------------------------------------

=head1 NAME

Template::Modules - Core modules comprising the Template Toolkit

=head1 DESCRIPTION

This section contains the documentation for the modules that comprise
the Template Toolkit.

=over 4

=item L<Template|Template>

Front-end module to the Template Toolkit



=item L<Template::Base|Template::Base>

Base class module implementing common functionality



=item L<Template::Config|Template::Config>

Factory module for instantiating other TT2 modules



=item L<Template::Constants|Template::Constants>

Defines constants for the Template Toolkit



=item L<Template::Context|Template::Context>

Runtime context in which templates are processed



=item L<Template::Document|Template::Document>

Compiled template document object



=item L<Template::Exception|Template::Exception>

Exception handling class module



=item L<Template::Filters|Template::Filters>

Post-processing filters for template blocks



=item L<Template::Iterator|Template::Iterator>

Data iterator used by the FOREACH directive



=item L<Template::Namespace::Constants|Template::Namespace::Constants>

Compile time constant folding



=item L<Template::Parser|Template::Parser>

LALR(1) parser for compiling template documents



=item L<Template::Plugin|Template::Plugin>

Base class for Template Toolkit plugins



=item L<Template::Plugins|Template::Plugins>

Plugin provider module



=item L<Template::Provider|Template::Provider>

Provider module for loading/compiling templates



=item L<Template::Service|Template::Service>

General purpose template processing service



=item L<Template::Stash|Template::Stash>

Magical storage for template variables



=item L<Template::Stash::Context|Template::Stash::Context>

Experimetal stash allowing list/scalar context definition



=item L<Template::Stash::XS|Template::Stash::XS>

Experimetal high-speed stash written in XS



=item L<Template::Test|Template::Test>

Module for automating TT2 test scripts



=item L<Template::Plugin::Autoformat|Template::Plugin::Autoformat>

Interface to Text::Autoformat module



=item L<Template::Plugin::CGI|Template::Plugin::CGI>

Interface to the CGI module



=item L<Template::Plugin::DBI|Template::Plugin::DBI>

Template interface to the DBI module



=item L<Template::Plugin::Datafile|Template::Plugin::Datafile>

Plugin to construct records from a simple data file



=item L<Template::Plugin::Date|Template::Plugin::Date>

Plugin to generate formatted date strings



=item L<Template::Plugin::Directory|Template::Plugin::Directory>

Plugin for generating directory listings



=item L<Template::Plugin::Dumper|Template::Plugin::Dumper>

Plugin interface to Data::Dumper



=item L<Template::Plugin::File|Template::Plugin::File>

Plugin providing information about files



=item L<Template::Plugin::Filter|Template::Plugin::Filter>

Base class for plugin filters



=item L<Template::Plugin::Format|Template::Plugin::Format>

Plugin to create formatting functions



=item L<Template::Plugin::GD::Image|Template::Plugin::GD::Image>

Interface to GD Graphics Library



=item L<Template::Plugin::GD::Polygon|Template::Plugin::GD::Polygon>

Interface to GD module Polygon class



=item L<Template::Plugin::GD::Constants|Template::Plugin::GD::Constants>

Interface to GD module constants



=item L<Template::Plugin::GD::Text|Template::Plugin::GD::Text>

Text utilities for use with GD



=item L<Template::Plugin::GD::Text::Align|Template::Plugin::GD::Text::Align>

Draw aligned strings in GD images



=item L<Template::Plugin::GD::Text::Wrap|Template::Plugin::GD::Text::Wrap>

Break and wrap strings in GD images



=item L<Template::Plugin::GD::Graph::lines|Template::Plugin::GD::Graph::lines>

Create line graphs with axes and legends



=item L<Template::Plugin::GD::Graph::lines3d|Template::Plugin::GD::Graph::lines3d>

Create 3D line graphs with axes and legends



=item L<Template::Plugin::GD::Graph::bars|Template::Plugin::GD::Graph::bars>

Create bar graphs with axes and legends



=item L<Template::Plugin::GD::Graph::bars3d|Template::Plugin::GD::Graph::bars3d>

Create 3D bar graphs with axes and legends



=item L<Template::Plugin::GD::Graph::points|Template::Plugin::GD::Graph::points>

Create point graphs with axes and legends



=item L<Template::Plugin::GD::Graph::linespoints|Template::Plugin::GD::Graph::linespoints>

Create line/point graphs with axes and legends



=item L<Template::Plugin::GD::Graph::area|Template::Plugin::GD::Graph::area>

Create area graphs with axes and legends



=item L<Template::Plugin::GD::Graph::mixed|Template::Plugin::GD::Graph::mixed>

Create mixed graphs with axes and legends



=item L<Template::Plugin::GD::Graph::pie|Template::Plugin::GD::Graph::pie>

Create pie charts with legends



=item L<Template::Plugin::GD::Graph::pie3d|Template::Plugin::GD::Graph::pie3d>

Create 3D pie charts with legends



=item L<Template::Plugin::HTML|Template::Plugin::HTML>

Plugin to create HTML elements



=item L<Template::Plugin::Image|Template::Plugin::Image>

Plugin access to image sizes



=item L<Template::Plugin::Iterator|Template::Plugin::Iterator>

Plugin to create iterators (Template::Iterator)



=item L<Template::Plugin::Math|Template::Plugin::Math>

Plugin interface to mathematical functions



=item L<Template::Plugin::Pod|Template::Plugin::Pod>

Plugin interface to Pod::POM (Pod Object Model)



=item L<Template::Plugin::Procedural|Template::Plugin::Procedural>

Base class for procedural plugins



=item L<Template::Plugin::String|Template::Plugin::String>

Object oriented interface for string manipulation



=item L<Template::Plugin::Table|Template::Plugin::Table>

Plugin to present data in a table



=item L<Template::Plugin::URL|Template::Plugin::URL>

Plugin to construct complex URLs



=item L<Template::Plugin::View|Template::Plugin::View>

Plugin to create views (Template::View)



=item L<Template::Plugin::Wrap|Template::Plugin::Wrap>

Plugin interface to Text::Wrap



=item L<Template::Plugin::XML::DOM|Template::Plugin::XML::DOM>

Plugin interface to XML::DOM



=item L<Template::Plugin::XML::RSS|Template::Plugin::XML::RSS>

Plugin interface to XML::RSS



=item L<Template::Plugin::XML::Simple|Template::Plugin::XML::Simple>

Plugin interface to XML::Simple



=item L<Template::Plugin::XML::Style|Template::Plugin::XML::Style>

Simple XML stylesheet transfomations



=item L<Template::Plugin::XML::XPath|Template::Plugin::XML::XPath>

Plugin interface to XML::XPath





=back

=head1 AUTHOR

Andy Wardley E<lt>abw@andywardley.comE<gt>

L<http://www.andywardley.com/|http://www.andywardley.com/>




=head1 VERSION

Template Toolkit version 2.13, released on 30 January 2004.

=head1 COPYRIGHT

  Copyright (C) 1996-2004 Andy Wardley.  All Rights Reserved.
  Copyright (C) 1998-2002 Canon Research Centre Europe Ltd.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.



=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:
